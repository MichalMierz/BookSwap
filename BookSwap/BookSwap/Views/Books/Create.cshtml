@model BookSwap.ViewModels.BookCreateViewModel

@{
    ViewData["Title"] = "Dodaj nową książkę";
}

<h1>@ViewData["Title"]</h1>

<form asp-action="Create" method="post" enctype="multipart/form-data">
    <div class="mb-3">
        <label asp-for="Title" class="form-label"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Author" class="form-label"></label>
        <input asp-for="Author" class="form-control" />
        <span asp-validation-for="Author" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="GenreId" class="form-label"></label>
        <select asp-for="GenreId" class="form-select" asp-items="ViewBag.Genres"></select>
        <span asp-validation-for="GenreId" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Condition" class="form-label"></label>
        <select asp-for="Condition" class="form-select">
            @foreach (var cond in Enum.GetValues(typeof(BookSwap.Models.BookCondition)))
            {
                <option value="@cond">@cond</option>
            }
        </select>
        <span asp-validation-for="Condition" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="CoverImage" class="form-label"></label>
        <input asp-for="CoverImage" type="file" class="form-control" />
        <span asp-validation-for="CoverImage" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Zapisz</button>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
