@model BookSwap.ViewModels.ReportCreateViewModel

@{
    ViewData["Title"] = "Zgłoś ogłoszenie lub użytkownika";
}

<h1>@ViewData["Title"]</h1>

<form asp-action="Create" method="post">
    @* Jeżeli raport dotyczy książki *@
    @if (Model.BookId.HasValue)
    {
        <input type="hidden" asp-for="BookId" />
    }
    @* Jeżeli raport dotyczy użytkownika *@
    @if (!string.IsNullOrEmpty(Model.ReportedUserId))
    {
        <input type="hidden" asp-for="ReportedUserId" />
    }

    <div class="mb-3">
        <label asp-for="Type" class="form-label"></label>
        <select asp-for="Type" class="form-select">
            <option value="">-- wybierz rodzaj zgłoszenia --</option>
            @foreach (var type in Enum.GetValues(typeof(BookSwap.Models.ReportType)))
            {
                <option value="@type">@type</option>
            }
        </select>
        <span asp-validation-for="Type" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Description" class="form-label"></label>
        <textarea asp-for="Description" class="form-control" rows="4"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-danger">Złóż zgłoszenie</button>
    <a asp-controller="Home" asp-action="Index" class="btn btn-secondary ms-2">Anuluj</a>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
